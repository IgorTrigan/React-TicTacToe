{"version":3,"sources":["components/ActiveField/StartGame/StartGame.module.css","components/ActiveField/Field/Field.module.css","containers/Game/Game.module.css","components/ActiveField/ActiveField.module.css","components/ActiveField/EndGame/EndGame.module.css","hoc/Layout/Layout.module.css","components/ActiveField/Field/circle1.svg","components/ActiveField/Field/cancel1.svg","components/ActiveField/StartGame/circle.svg","components/ActiveField/StartGame/cancel.svg","components/HeaderGame/HeaderGame.module.css","hoc/Layout/Layout.js","components/ActiveField/Field/Field.js","components/ActiveField/StartGame/StartGame.js","components/ActiveField/EndGame/EndGame.js","components/ActiveField/ActiveField.js","components/HeaderGame/HeaderGame.js","containers/Game/Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Layout","className","classes","this","props","children","Component","Field","result","whoFirst","alt","src","cross","circle","onClick","onFieldClickHandler","field","id","StartGame","Chooses","onChooseClickHandler","EndGame","winer","chooseItem","WhoWin","Button","variant","color","onRestartClikHandler","ActiveField","process","needPaint","area","map","index","permiss","fieldId","key","HeaderGame","Game","state","switchAllowClick","corectArr","e","setState","chechAboutEnd","newArr","some","every","i","setTimeout","Restart","App","Boolean","window","location","hostname","match","application","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.29025eff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"StartGame\":\"StartGame_StartGame__3KiR0\",\"Chooses\":\"StartGame_Chooses__24cWy\",\"cross\":\"StartGame_cross__3L1Dd\",\"circle\":\"StartGame_circle__1Lg4K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Field\":\"Field_Field__2Cxio\",\"cross\":\"Field_cross__2ZTfc\",\"circle\":\"Field_circle__2S1im\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Game\":\"Game_Game__15hGF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveField\":\"ActiveField_ActiveField__1-r6R\",\"line0\":\"ActiveField_line0__10oth\",\"line1\":\"ActiveField_line1__2AVT2\",\"line2\":\"ActiveField_line2__2Hdvy\",\"line3\":\"ActiveField_line3__HY2c4\",\"line4\":\"ActiveField_line4__4UbU4\",\"line5\":\"ActiveField_line5__2lb-x\",\"line6\":\"ActiveField_line6__2T2Qa\",\"line7\":\"ActiveField_line7__1WfMB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EndGame\":\"EndGame_EndGame__2XWGJ\",\"WhoWin\":\"EndGame_WhoWin__1VJjb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3YZdg\"};","module.exports = __webpack_public_path__ + \"static/media/circle1.505d1d71.svg\";","module.exports = __webpack_public_path__ + \"static/media/cancel1.c907543c.svg\";","module.exports = __webpack_public_path__ + \"static/media/circle.505d1d71.svg\";","module.exports = __webpack_public_path__ + \"static/media/cancel.c907543c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HeaderGame\":\"HeaderGame_HeaderGame__v_op6\"};","import React, { Component } from \"react\";\r\nimport classes from \"./Layout.module.css\";\r\n\r\nexport default class Layout extends Component {\r\n  render() {\r\n    return (\r\n      <div className={classes.Layout}>\r\n        <main>{this.props.children}</main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./Field.module.css\";\r\nimport circle from \"./circle1.svg\";\r\nimport cross from \"./cancel1.svg\";\r\n\r\nconst Field = props => {\r\n  let result;\r\n  if (props.whoFirst === true) {\r\n    result = <img alt={\"cross\"} src={cross} className={classes.cross} />;\r\n  } else if (props.whoFirst === false) {\r\n    result = <img alt={\"zero\"} src={circle} className={classes.circle} />;\r\n  }\r\n  return (\r\n    <div\r\n      className={classes.Field}\r\n      onClick={() => props.onFieldClickHandler(props.field.id)}\r\n    >\r\n      {result}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Field;\r\n","import React from \"react\";\r\nimport classes from \"./StartGame.module.css\";\r\nimport circle from \"./circle.svg\";\r\nimport cross from \"./cancel.svg\";\r\n\r\nconst StartGame = props => {\r\n  return (\r\n    <div className={classes.StartGame}>\r\n      <h1>Which one ?</h1>\r\n      <div className={classes.Chooses}>\r\n        <img\r\n          alt={\"cross\"}\r\n          src={cross}\r\n          className={classes.cross}\r\n          onClick={() => props.onChooseClickHandler(true)}\r\n        />\r\n        <h2>or</h2>\r\n        <img\r\n          alt={\"zero\"}\r\n          src={circle}\r\n          className={classes.circle}\r\n          onClick={() => props.onChooseClickHandler(false)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartGame;\r\n","import React from \"react\";\r\nimport classes from \"./EndGame.module.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst EndGame = props => {\r\n  let winer;\r\n  if (props.chooseItem === false) {\r\n    winer = \"Winer: Crooss !\";\r\n  } else if (props.chooseItem === true) {\r\n    winer = \"Winer: Zero !\";\r\n  } else winer = \"Draw !\";\r\n  return (\r\n    <div className={classes.EndGame}>\r\n      <h1>The end!</h1>\r\n      <div className={classes.WhoWin}>\r\n        <p>{winer}</p>\r\n      </div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          props.onRestartClikHandler();\r\n        }}\r\n      >\r\n        One more\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EndGame;\r\n","import React from \"react\";\r\nimport classes from \"./ActiveField.module.css\";\r\nimport Field from \"./Field/Field\";\r\nimport StartGame from \"./StartGame/StartGame\";\r\nimport EndGame from \"./EndGame/EndGame\";\r\n\r\nconst ActiveField = props => {\r\n  let needPaint = \"line\" + props.needPaint;\r\n  let process;\r\n  if (props.process === null) {\r\n    process = (\r\n      <StartGame\r\n        chooseItem={props.chooseItem}\r\n        onChooseClickHandler={props.onChooseClickHandler}\r\n      />\r\n    );\r\n  } else if (props.process === true) {\r\n    process = props.area.map((id, index) => {\r\n      let permiss = null;\r\n      if (\r\n        props.fieldId === index + 1 ||\r\n        id.field === true ||\r\n        id.field === false\r\n      ) {\r\n        permiss = props.area[index].field;\r\n      }\r\n      return (\r\n        <Field\r\n          key={index}\r\n          field={id}\r\n          chooseItem={props.chooseItem}\r\n          whoFirst={permiss}\r\n          onFieldClickHandler={props.onFieldClickHandler}\r\n        />\r\n      );\r\n    });\r\n  } else if (props.process === false) {\r\n    process = (\r\n      <EndGame\r\n        chooseItem={props.chooseItem}\r\n        onRestartClikHandler={props.onRestartClikHandler}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.ActiveField}>\r\n      <div className={classes[needPaint]}></div>\r\n      {process}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActiveField;\r\n","import React from \"react\";\r\nimport classes from \"./HeaderGame.module.css\";\r\n\r\nconst HeaderGame = props => {\r\n  return (\r\n    <div className={classes.HeaderGame}>\r\n      <h1>Tic-Tac-Toe</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderGame;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./Game.module.css\";\r\nimport ActiveField from \"../../components/ActiveField/ActiveField\";\r\nimport HeaderGame from \"../../components/HeaderGame/HeaderGame\";\r\n\r\nexport default class Game extends Component {\r\n  state = {\r\n    process: null,\r\n    chooseItem: null,\r\n    whoFirst: null,\r\n    fieldId: null,\r\n    switchAllowClick: true,\r\n    area: [\r\n      { id: 1, field: null },\r\n      { id: 2, field: null },\r\n      { id: 3, field: null },\r\n      { id: 4, field: null },\r\n      { id: 5, field: null },\r\n      { id: 6, field: null },\r\n      { id: 7, field: null },\r\n      { id: 8, field: null },\r\n      { id: 9, field: null }\r\n    ],\r\n    corectArr: [\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6]\r\n    ],\r\n    needPaint: null // number of arr\r\n  };\r\n\r\n  onFieldClickHandler = fieldId => {\r\n    if (this.state.switchAllowClick) {\r\n      let chooseItem = this.state.chooseItem;\r\n\r\n      if (null === this.state.area[fieldId - 1].field) {\r\n        this.state.area.map(e => {\r\n          if (e.id === fieldId) {\r\n            e.field = chooseItem;\r\n            this.setState({\r\n              whoFirst: e.field,\r\n              fieldId,\r\n              chooseItem: !chooseItem\r\n            });\r\n\r\n            this.chechAboutEnd(chooseItem);\r\n          }\r\n          return e;\r\n        });\r\n      }\r\n    }\r\n  };\r\n  onChooseClickHandler = chooseItem => {\r\n    this.setState({ process: true, chooseItem: chooseItem });\r\n  };\r\n\r\n  chechAboutEnd = chooseItem => {\r\n    let newArr = this.state.area.map(e => {\r\n      return e.field;\r\n    });\r\n    let needPaint;\r\n    let checkWhoWin = this.state.corectArr.some((e, index) => {\r\n      if (e.every(i => newArr[i] === chooseItem)) {\r\n        needPaint = index;\r\n      }\r\n      return e.every(i => newArr[i] === chooseItem);\r\n    });\r\n   \r\n    if (checkWhoWin) {\r\n      this.setState({\r\n        switchAllowClick: false,\r\n        needPaint: needPaint\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          process: false,\r\n          needPaint: null\r\n        });\r\n      }, 2000);\r\n    }\r\n    let draw = newArr.every(e => e !== null);\r\n    if (draw) {\r\n      this.setState({\r\n        process: false,\r\n        chooseItem: null,\r\n        needPaint: null\r\n      });\r\n    }\r\n  };\r\n\r\n  onRestartClikHandler = Restart => {\r\n    this.state.area.map(e => (e.field = null));\r\n    this.setState({\r\n      process: null,\r\n      chooseItem: null,\r\n      whoFirst: null,\r\n      fieldId: null,\r\n      switchAllowClick: true\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Game}>\r\n        <div>\r\n          <HeaderGame />\r\n          <div className={classes.field}>\r\n            <ActiveField\r\n              process={this.state.process}\r\n              area={this.state.area}\r\n              fieldId={this.state.fieldId}\r\n              chooseItem={this.state.chooseItem}\r\n              whoFirst={this.state.whoFirst}\r\n              needPaint={this.state.needPaint}\r\n              onFieldClickHandler={this.onFieldClickHandler}\r\n              onChooseClickHandler={this.onChooseClickHandler}\r\n              onRestartClikHandler={this.onRestartClikHandler}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport Game from \"./containers/Game/Game\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Layout>\n        <Game />\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst application = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nReactDOM.render(application, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}